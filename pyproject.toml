[tool.poetry]
name = "ssb-klass-python"
version = "0.0.8"
description = "A Python package built on top of KLASS's API for retrieving classifications, codes, correspondences etc."
authors = ["Carl Corneil, ssb-pythonistas <ssb-pythonistas@ssb.no>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/statisticsnorway/ssb-klass-python"
repository = "https://github.com/statisticsnorway/ssb-klass-python"
documentation = "https://statisticsnorway.github.io/ssb-klass-python"
packages = [{ include = "klass", from = "src" }]
classifiers = ["Development Status :: 4 - Beta"]

[tool.poetry.urls]
Changelog = "https://github.com/statisticsnorway/ssb-klass-python/releases"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
dapla-toolbelt = ">=1.3.2"
python-dateutil = ">=2.8.2"
toml = ">=0.10.2"
ipywidgets = ">=8.0.6"
pandas = ">=1.5.3"
requests = ">=2.31.0"
# Stubs for Mypy
pandas-stubs = ">=2.1.1.230928"
types-requests = ">=2.31.0.10"
types-python-dateutil = ">=2.8.19.14"
types-toml = ">=0.10.8.7"

[tool.poetry.group.dev.dependencies]
pygments = ">=2.10.0"
black = { extras = ["jupyter"], version = ">=23.1.0" }
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
furo = ">=2021.11.12"
mypy = ">=0.930"
ipykernel = "^6.15.3"
pre-commit = "^2.20.0"
pre-commit-hooks = "^4.4.0"
pytest = ">=6.2.5"
pytest-cov = "^4.0.0"
pyproject-flake8 = "^5.0.4.post1"
nox = "^2023.4.22"
nox-poetry = "^1.0.3"
ruff = ">=0.0.284"
sphinx = ">=6.2.1"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.24.0"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["klass", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 50

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "ipywidgets.*",
    "argcomplete.*",
]
ignore_missing_imports = true

[tool.ruff]
force-exclude = true  # Apply excludes to pre-commit
show-fixes = true
src = ["src", "tests"]
target-version = "py39"  # Minimum Python version supported

# Ruff rules may be customized as desired: https://docs.astral.sh/ruff/rules/
select = [
    "A",    # prevent using keywords that clobber python builtins
    "B",    # bugbear: security warnings
    "D",    # documentation
    "E",    # pycodestyle
    "F",    # pyflakes
    "ISC",  # implicit string concatenation
    "I",    # sort imports
    "UP",   # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
]
ignore = [
    "ANN101", # Supress missing-type-self.
    "D100",   # Supress undocumented-public-module. Only doc of public api required.
    "E402",   # Supress module-import-not-at-top-of-file, needed in jupyter notebooks.
    "E501",   # Supress line-too-long warnings: trust black's judgement on this one.
]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
    "*.ipynb",  # Custom ignore for klass-package, notebooks are only for "demo", waiting for a B018 ignore on notebooks in ruff
    # https://github.com/astral-sh/ruff/pull/8872 <- has been merged in main, but not yet released?
]

[tool.ruff.isort]
force-single-line = true

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pydocstyle]
convention = "google"  # You can also use "numpy".

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator", "pydantic.validator"]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]
"**/tests/*" = [
    # asserts are encouraged in pytest
    "S101",
    # return annotations don't add value for test functions
    "ANN201",
    # docstrings are overkill for test functions
    "D103",
    "D100",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
